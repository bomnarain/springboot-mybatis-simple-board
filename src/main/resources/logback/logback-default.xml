<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<property name="LOG_PATTERN"
	value="%d{yyyy-MM-dd HH:mm:ss} %p %c[%method:%line] - %msg%n" />
	
	<appender name="STDOUT"
	class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
	      	<!--
	      	%d{yyyy-MM-dd HH:mm:ss} : 년월일 시분초
	      	%thread : thread name 
	      	%-5level : log level , -5는 출력 고정폭 값
	      	%logger{length} :Logger name의 이름, {length}는 자리수
	      	%msg : log message %message은 alias
	      	%n : 줄바꿈
	      	
	      	org.fusesource.jansi:jansi:1.8 가 필요함.
                       Linux ,Mac OS X 기본적으로 지원함
                       <withJansi>true</withJansi>설정후 사용해야함
	      	%highlight : log level 별로 color가 다르게 나옴
		    %d : 로그의 기록시간을 출력한다.
		    %p : 로깅의 레벨을 출력한다.
		    %F : 로깅이 발생한 프로그램의 파일명을 출력한다.
		    %M : 로깅이 발생한 메소드의 이름을 출력한다.
		    %l : 로깅이 발생한 호출지의 정보를 출력한다.
		    %L : 로깅이 발생한 호출지의 라인수를 출력한다.
		    %t : 로깅이 발생한 Thread명을 출력한다.
		    %c : 로깅이 발생한 카테고리를 출력한다.
		    %C : 로깅이 발생한 클래스명을 출력한다.
		    %m : 로그 메시지를 출력한다.
		    %n : 개행 문자를 출력한다.
		    %% : %를 출력
		    %r : 어플리케이션이 시작 이후부터 로깅이 발생한 시점까지의 시간을 출력한다.(ms)
		    %x : 로깅이 발생한 Thread와 관련된 NDC(nested diagnostic context)를 출력한다.
		    %X : 로깅이 발생한 Thread와 관련된 MDC(mapped diagnostic context)를 출력한다.	      	
	      	-->		
			<Pattern>${LOG_PATTERN}</Pattern>
		</layout>
	</appender>
	
	<!-- 로그 줄이기 -->
	<logger name="org.springframework.boot">
		<level value="ERROR"/>
	</logger>
	<logger name="org.springframework.boot.devtools.restart">
		<level value="ERROR"/>
	</logger>
	<logger name="org.springframework">
		<level value="ERROR"/>
	</logger>
	<logger name="springfox">
		<level value="ERROR"/>
	</logger>
	<logger name="org.hibernate">
		<level value="ERROR"/>
	</logger>
	<logger name="org.apache">
		<level value="ERROR"/>
	</logger>
	<logger name="org.apache.http.impl.conn">
		<level value="ERROR"/>
	</logger>
	<logger name="log4jdbc">
		<level value="ERROR"/>
	</logger>
	<logger name="org.mybatis">
		<level value="ERROR"/>
	</logger>
	<logger name="com.zaxxer">
		<level value="ERROR"/>
	</logger>	
	
	<!--  Query Loggers -->
	<logger name="jdbc" level="ERROR"/>
	<logger name="jdbc.connection" level="ERROR"/>
	<!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
	<logger name="jdbc.sqlonly" level="ERROR"/>
	<!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
	<logger name="jdbc.resultset" level="OFF"/>
	<logger name="jdbc.resultsettable" level="ERROR"/>
	<!--  ResultSet을 제외한 모든JDBC호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 축적해야 할 필요가 있을 경우를 제외하고는 사용을 권장하지 않는다. -->
	<logger name="jdbc.audit" level="OFF"/>
	
	<root level="DEBUG">
		<appender-ref ref="STDOUT" />
	</root>
	
</configuration>